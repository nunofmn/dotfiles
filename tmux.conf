# improve colors
set -g default-terminal 'xterm-256color-italic'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# set default shell to zsh
set -g default-command /bin/zsh
set -g default-shell /bin/zsh

# GNU Screen like
unbind C-b
set -g prefix C-a

set-option -g mouse on

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# soften status bar color from harsh green to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# increase scrollback lines
set -g history-limit 10000

set -s escape-time 0

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

set-option -g default-command 'reattach-to-user-namespace -l zsh"

# Here's where we get into the status line:
# # These basically set the defaults
set-option -g status-justify left
set-option -g status-bg black
set-option -g status-fg white

# Set the length of the left region to 40 characters
set-option -g status-left-length 40
set-option -g pane-active-border-fg green
set-option -g pane-active-border-bg black
set-option -g pane-border-fg white
set-option -g pane-border-bg black
set-option -g message-fg white
set-option -g message-bg red

setw -g window-status-bg black
setw -g window-status-current-fg red

# Here's where we set the actual display of the various regions
set -g status-left '#[bg=colour100]#[fg=black]#H:#[fg=white]#S#[fg=colour100] #[bg=black]#[default]'
set -g status-right-length 100
set -g status-right '#[fg=green]][#[fg=white] #T #[fg=green]][#[fg=blue]%Y-%m-%d #[fg=black]? %H:%M#[default]'
set -g status-right '#[fg=blue]#[bg=blue]#[fg=black] %H:%M #[default]'

bind-key -n C-S-Up resize-pane -U 15
bind-key -n C-S-Down resize-pane -D 15
bind-key -n C-S-Left resize-pane -L 25
bind-key -n C-S-Right resize-pane -R 25

#Use vim keybindings in copy mode
setw -g mode-keys vi

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection
